<?php

// this file is auto-generated by prolic/fpp
// don't edit this file manually

declare(strict_types=1);

namespace App\Application\Command\ChangeEmailAddress;

final class ChangeEmailAddressCommand extends \Prooph\Common\Messaging\Command
{
    use \Prooph\Common\Messaging\PayloadTrait;

    protected $messageName = 'App\Application\Command\ChangeEmailAddress\ChangeEmailAddressCommand';

    public function userId(): \App\Domain\UserId
    {
        return \App\Domain\UserId::fromString($this->payload['userId']);
    }

    public function email(): \App\Domain\ValueObject\Email
    {
        return \App\Domain\ValueObject\Email::fromString($this->payload['email']);
    }

    public static function with(\App\Domain\UserId $userId, \App\Domain\ValueObject\Email $email): ChangeEmailAddressCommand
    {
        return new self([
            'userId' => $userId->toString(),
            'email' => $email->toString(),
        ]);
    }

    protected function setPayload(array $payload): void
    {
        if (! isset($payload['userId']) || ! \is_string($payload['userId'])) {
            throw new \InvalidArgumentException("Key 'userId' is missing in payload or is not a string");
        }

        if (! isset($payload['email']) || ! \is_string($payload['email'])) {
            throw new \InvalidArgumentException("Key 'email' is missing in payload or is not a string");
        }

        $this->payload = $payload;
    }
}
