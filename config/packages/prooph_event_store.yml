prooph_event_store:
    stores:
        user_store:
            event_store: 'app.event_store.default'
            repositories:
                App\Infrastructure\User\Repository\EventStoreUserCollection:
                    aggregate_type: App\Domain\User\User
                    aggregate_translator: Prooph\EventSourcing\EventStoreIntegration\AggregateTranslator

services:
    _defaults:
        public: false
        autowire: true

    app.event_store.default:
        class: Prooph\EventStore\Pdo\MySqlEventStore
        arguments:
            - '@prooph_event_store.message_factory'
            - '@doctrine.pdo.connection'
            - '@app.event_store.mysql.persistence_strategy'

    doctrine.pdo.connection:
        class: PDO
        factory: ['@database_connection', getWrappedConnection]

    app.event_store.mysql.persistence_strategy:
        class: Prooph\EventStore\Pdo\PersistenceStrategy\MySqlAggregateStreamStrategy

    Prooph\EventSourcing\EventStoreIntegration\AggregateTranslator: ~

    App\Domain\User\Repository\UserRepositoryInterface: '@App\Infrastructure\User\Repository\EventStoreUserCollection'
